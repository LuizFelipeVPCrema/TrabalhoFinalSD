# Script para iniciar todos os servi√ßos do Sistema de Estudos
Write-Host "üöÄ Iniciando Sistema de Estudos - Todos os Servi√ßos" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green

# Verificar se Docker est√° rodando
try {
    docker info | Out-Null
    Write-Host "‚úÖ Docker est√° rodando" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker n√£o est√° rodando. Por favor, inicie o Docker e tente novamente." -ForegroundColor Red
    exit 1
}

# Parar containers existentes
Write-Host "üõë Parando containers existentes..." -ForegroundColor Yellow
docker-compose down

# Construir e iniciar os servi√ßos
Write-Host "üî® Construindo e iniciando os servi√ßos..." -ForegroundColor Yellow
docker-compose up --build -d

# Aguardar os servi√ßos iniciarem
Write-Host "‚è≥ Aguardando os servi√ßos iniciarem..." -ForegroundColor Yellow
Start-Sleep -Seconds 15

# Verificar status dos servi√ßos
Write-Host "üîç Verificando status dos servi√ßos..." -ForegroundColor Yellow

# Auth Service
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8080/health" -TimeoutSec 5
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Auth Service: http://localhost:8080" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå Auth Service: N√£o est√° respondendo" -ForegroundColor Red
}

# Backend Service
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8081/health" -TimeoutSec 5
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Backend Service: http://localhost:8081" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå Backend Service: N√£o est√° respondendo" -ForegroundColor Red
}

# Frontend
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000" -TimeoutSec 5
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Frontend: http://localhost:3000" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå Frontend: N√£o est√° respondendo" -ForegroundColor Red
}

Write-Host ""
Write-Host "üéâ Sistema iniciado com sucesso!" -ForegroundColor Green
Write-Host "üì± Acesse: http://localhost:3000" -ForegroundColor Cyan
Write-Host "üîß Para parar: docker-compose down" -ForegroundColor Yellow
Write-Host "üìä Para ver logs: docker-compose logs -f" -ForegroundColor Yellow
Write-Host ""
Write-Host "Pressione qualquer tecla para continuar..." -ForegroundColor Gray
$null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
